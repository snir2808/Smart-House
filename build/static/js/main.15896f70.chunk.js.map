{"version":3,"sources":["components/ShowRooms.jsx","components/Home.jsx","components/AddNewRoom.jsx","components/Rooms.jsx","App.js","reportWebVitals.js","index.js"],"names":["ShowRooms","props","useState","border","width","height","backgroundColor","color","divStyle","index","name","type","roomIndex","className","style","textDecoration","to","onClick","func","Home","arr","map","item","roomName","roomColor","roomType","clear","AddNewRoom","setType","setName","setColor","onChange","e","target","value","selected","maxlength","placeholder","length","add","alert","Rooms","newArr","appliances","chack","setChack","disply","setDisply","applist","setAppList","boilerVal","funcApp","stereoVal","element","display","eventValue","i","colorFunc","App","rooms","setRooms","NewRoom","t","n","c","appliancesObg","setAppliancesObg","indexRoom","setIndexRoom","exact","path","rIndex","rName","rType","render","a","console","log","indexApp","appArr","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15896f70.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\n//Component showing the rooms built\r\nexport default function ShowRooms(props) {\r\n    const [divStyle, setDivStyle] = useState({\r\n            border: \"2px solid black\",\r\n            width: '130px',\r\n            height: '130px',\r\n            backgroundColor: props.color\r\n        })\r\n    const [roomIndex, setRoomIndex] = useState([props.index,props.name,props.type])\r\n        let rturnFunc = () =>{\r\n            props.func(roomIndex[0],roomIndex[1],roomIndex[2])\r\n        }\r\n    return (\r\n        <div>\r\n        <div className={'room'} style={divStyle}>\r\n           <Link\r\n            style={{ textDecoration: 'none' }}\r\n            to='/room' ><p \r\n           className={'roomName'}\r\n           onClick={rturnFunc}>{props.name}</p></Link>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport ShowRooms from './ShowRooms'\r\n\r\nexport default function Home(props) {\r\n\r\n    return (\r\n        <div>\r\n\r\n            <h1>Smart House</h1>\r\n\r\n            <Link to = '/addroom'><button className={'myButton'}>Add new room</button></Link>\r\n\r\n            {props.arr.map((item,index,arr)=>{\r\n                return( \r\n                <ShowRooms\r\n                name = {item.roomName}\r\n                color = {item.roomColor}\r\n                index = {index}\r\n                type = {item.roomType}\r\n                func = {props.func}\r\n                clear = {props.clear}\r\n                />\r\n            )})}\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\n// Component responsible for building all rooms according to validation\r\nexport default function AddNewRoom(props) {\r\n    const [type, setType] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [color, setColor] = useState('')\r\n    \r\n    let addNew = ()=> {\r\n        if(name.length > 1){\r\n            props.add(type,name,color)\r\n\r\n        }else{\r\n            alert('Room name must be at least 2 characters long')\r\n        }\r\n    }\r\n    return (\r\n     <div className={''}><br/><br/>\r\n     \r\n        <select onChange={e => setType(e.target.value)}>\r\n            <option selected value=\"\">Select one</option>\r\n            <option  value=\"Bedroom\">Bedroom</option>\r\n            <option value=\"Bathroom\">Bathroom</option>\r\n            <option value=\"kitchen\">Kitchen</option>\r\n            <option value=\"Storage\">Storage</option>\r\n        </select><br/><br/>\r\n        \r\n            <input onChange={e => setName(e.target.value)}  maxlength=\"5\" type=\"text\" placeholder ='Room name'/><br/><br/><br/>\r\n            <input onChange={e => setColor(e.target.value)} type=\"text\" placeholder ='Room color'/><br/><br/><br/>\r\n            <Link to = '/'><button className={'myButton'} onClick={addNew}>Create</button></Link>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Bulb} from '@styled-icons/ionicons-outline/Bulb'\r\nimport {HotTub} from '@styled-icons/material-twotone/HotTub'\r\nimport {Radio} from '@styled-icons/zondicons/Radio'\r\nimport {Fan} from '@styled-icons/fa-solid/Fan'\r\n\r\n//A component that is responsible for displaying the contents of the room and adding electrical products.\r\n// Note! There are lots of variables here with similar names and each one has a different use.\r\nexport default function Rooms(props) {\r\n\r\n    const newArr = props.arr[props.index].appliances\r\n    //This is a state that forces React to render.\r\n    // To prevent bugs\r\n    const [chack, setChack] =useState(0)\r\n\r\n    const [disply, setDisply] = useState('none')\r\n    let disFunc = () =>{\r\n        if(disply === 'none'){\r\n            setDisply('block')\r\n        }else{\r\n            setDisply('none')\r\n        }\r\n    }\r\n    // state that holds the appliance that the user wants to add\r\n    const [applist, setAppList] = useState()\r\n\r\n    //The function looks strange? In fact it prevents a lot of bugs.\r\n    //It forces React to render and update to state before sending the variables to the next function\r\n    let colorChange = (i) => {\r\n        setChack(chack+1)\r\n        props.colorFunc(i,props.index)\r\n    }\r\n\r\n    //A function that links the product selection menu to the local state\r\n    let appliances = (e) =>{\r\n        let eventValue = e.target.value\r\n        if(eventValue === '<Fan/>' ){\r\n            setAppList({applist: <Fan/>, color: 'red'})\r\n        }else if(eventValue === '<HotTub/>'){\r\n            setAppList({applist: <HotTub/>, color:'red'})\r\n            boilerVal()\r\n        }\r\n        else if(eventValue === '<Radio/>'){\r\n            stereoVal()\r\n        }\r\n        else if(eventValue === '<Bulb/>'){\r\n            setAppList({applist: <Bulb/>, color: 'red'})\r\n        }   \r\n    }\r\n\r\n    //A function that sends the values to the main state,\r\n    // and also validates the amount of appliances in each room\r\n\r\n    let newAppliances = () =>{\r\n        if(props.arr[props.index].appliances.length === 5){\r\n            alert('you have already 5 appliances in this room! ')\r\n        }else{\r\n        \r\n            props.funcApp(applist,props.index)\r\n            setDisply('none')\r\n            setChack(applist)\r\n        }\r\n    }\r\n    \r\n   let boilerVal = () =>{\r\n        if (props.type === 'Bathroom' ){\r\n            setAppList({applist: <HotTub/>, color:'red'})\r\n            props.funcApp(applist,props.index)\r\n            setDisply('none')\r\n            setChack(applist)\r\n        }else {\r\n            alert('A boiler can only be in the bathroom!')\r\n            setAppList({applist: <HotTub/>, color:'red'})\r\n        }\r\n   }\r\n\r\n   let stereoVal = () =>{\r\n        props.arr[props.index].appliances.map((element) => {\r\n        if(element.color === '#FF0000'){\r\n            setAppList({applist: ' ', color: 'black'})\r\n            alert('Only one stereo system in each room!')\r\n        }else{\r\n            setAppList({applist: <Radio/>, color: '#FF0000'})\r\n            \r\n        }\r\n    });\r\n} \r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Smart House</h1>\r\n            \r\n            <Link to='/'><button className={'myButton'}>Back to rooms</button></Link>\r\n            <p className={'pNT'}>Room type: {props.type}</p>\r\n            <p className={'pNT'}>Room name: {props.name}</p>\r\n            <button className={'myButton'} onClick={disFunc}>Add appliances</button><br/><br/><br/>\r\n\r\n            <div style={{display: disply}}>\r\n\r\n            <select className={'smallSelect'}\r\n            onChange={appliances}>\r\n                <option selected value=\" \">Add</option>\r\n                <option  value={'<Fan/>'}>Air-Conditioner</option>\r\n                <option value={'<HotTub/>'}>boilermaker</option>\r\n                <option value={'<Bulb/>'}>lamp</option>\r\n                <option value={'<Radio/>'}>stereo system</option>\r\n            </select><br/>\r\n\r\n            <button className={'myButton'} onClick={newAppliances}>Add</button>\r\n            </div>\r\n\r\n            {newArr.map((item,index) => { \r\n                return(\r\n                <p style={{color: item.color}}\r\n                 className={'app'}\r\n                 onClick = {() =>{colorChange(index)}}\r\n                 >\r\n                  {item.applist}\r\n                </p>)\r\n            }) }\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\nimport { HashRouter as Router, Switch, Route} from \"react-router-dom\";\nimport Home from './components/Home'\nimport AddNewRoom from './components/AddNewRoom'\nimport Rooms from './components/Rooms'\nimport './App.css';\n\n//Welcome to my code .. follow the comments and everything will be fine\n\n\nfunction App(props) {\n\n\n \n  //The state that contains all the rooms\n  const [rooms, setRooms] = useState([\n    {roomType:'', roomName: \"Sample room\", roomColor: \"#F24452\",appliances:['',]}\n  ])\n\n\n  //A function passed through props to component 'AddNewRoom'\n  let NewRoom = (t,n,c) => {\n    setRooms([...rooms,{roomType: t, roomName: n, roomColor: c, appliances:['',]}])\n  }\n\n  //It's the state that is responsible for bringing appliances into the room\n  const [appliancesObg , setAppliancesObg] = useState([])\n\n  //Function for inserting new appliances\n  let newAppliances = (a,i) => {\n   setAppliancesObg(appliancesObg =>[...appliancesObg,a])\n      rooms.map((item,index,arr)=>{\n        let newArr = rooms\n        if(index === i){\n          newArr[index].appliances = [...appliancesObg,a]\n         setRooms(newArr)\n         console.log(newArr[index].appliances)\n        }\n      })\n\n  }\n\n  //State after providing to each app the index of each room\n  const [indexRoom, setIndexRoom] = useState([])\n  let chack = (rIndex,rName,rType) =>{setIndexRoom([rIndex, rName, rType])}\n  \n\n\n  //A function responsible for changing the color of appliances in rooms\n  let colorChange = (indexApp,indexRoom) =>{\n    let appArr = rooms\n    console.log(appArr[indexRoom].appliances.length)\n    if(rooms[indexRoom].appliances[indexApp].color === 'red'){\n      appArr[indexRoom].appliances[indexApp].color = 'lime'\n      setRooms(rooms)\n      setRooms(appArr)\n    }else{\n      appArr[indexRoom].appliances[indexApp].color = 'red'\n      setRooms(appArr)\n    }\n  }\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n  return (\n    <div className=\"App\">\n      \n       <Router>\n        <Switch>\n          <Route exact path = '/' >\n           <Home\n             arr = {rooms}\n             func = {chack}\n             \n          />\n          \n          </Route>\n          <Route  path = '/addroom' render= { (props) =><AddNewRoom add = {NewRoom}{...props}/>}/>\n\n\n          <Route path = '/room'>\n\n            <Rooms \n              arr = {rooms}\n              index = {indexRoom[0]}\n              name = {indexRoom[1]}\n              type = {indexRoom[2]}\n              funcApp = {newAppliances}\n              colorFunc ={colorChange}\n            />\n\n          </Route>\n        </Switch>\n      </Router>\n    \n     \n     \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}